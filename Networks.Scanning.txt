`` Host discovery

    ~$ nmap -sn -n VAR_TARGET_CIDR
    ~$ proxychains -q nmap -sn -n VAR_TARGET_CIDR
    ~$ nbtscan -r VAR_TARGET_CIDR
    ~$ netdiscover -i eth1 -P -N -r VAR_TARGET_CIDR
    ~$ for i in $(seq 1 254); do ip_address="192.168.1.$i"; ping -c 1 -W 1 $ip_address | grep "bytes from" >/dev/null && echo "$ip_address :)" || echo -n "."; done

    `` Nmap ping scan types (root only)

        ~# nmap -sn -n -PE VAR_TARGET_CIDR

        PS - TCP SYN (default at port 80)
        PA - TCP ACK (default at port 80)
        PU - UDP
        PY - SCTP INIT
        PE - ICMP Echo
        PP - ICMP timestamp
        PM - ICMP address mask
        PO - Other IP protocol
        PR - ARP scan

`` Service discovery

    ~$ nmap -sS -Pn -n -v VAR_TARGET_CIDR
    ~$ proxychains -q nmap -sT -Pn -n -v VAR_TARGET_CIDR
    ~$ nmap --script smb-os-discovery --script-args=unsafe=1 -p 445 VAR_TARGET_CIDR
    ~$ nmap -sU --open -p 161 VAR_TARGET_CIDR
    ~$ nmap -v -p 139,445 VAR_TARGET_CIDR
    ~$ nmap -v -p 21 --script ftp-anon VAR_TARGET_CIDR

    `` PowerShell

        `` With simple range-based port scanning

            >$ 1..254 | % { $a = $_; 1..1024 | % {echo ((new-object Net.Sockets.TcpClient).Connect("192.168.1.$a",$_)) "Port $_ is open!"} 2>$null}

        `` With simple list-based port scanning

            >$ 1..254 | % { $a = $_; write-host "------"; write-host "192.168.1.$a"; 22,53,80,445 | % {echo ((new-object Net.Sockets.TcpClient).Connect("192.168.1.$a",$_)) "Port $_ is open!"} 2>$null}

`` ARP

    ~$ arp -a
    ~$ arp-scan VAR_TARGET_CIDR -I eth0
    ~$ fping -ar
