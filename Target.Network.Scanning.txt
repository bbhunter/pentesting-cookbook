`` Network

    `` ARP

        ~$ arp -a
        ~$ arp-scan VAR_TARGET_CIDR -I eth0
        ~$ fping -ar

    `` TCP/IP

        -- Set some variables first
        ~$ export VAR_TARGET_CIDR=10.10.10.0/24
        ~$ export VAR_FILENAME=${VAR_TARGET_CIDR::${#VAR_TARGET_CIDR}-3}

        -- Ping scan only, no DNS resolution
        ~$ nmap -sn -n -oA $VAR_FILENAME-basic $VAR_TARGET_CIDR

        -- A more in-depth discovery
        ~$ nmap -sn -n -PE -PP -PM -PS110,111,113,137,138,139,143,1433,1723,161,162,20,21,22,2001,2020,2222,23,2525,27017,3306,3389,389,4443,445,5020,5432,5061,587,5900,5901,636,6379,843,88,8000,8022,8080,8443,8888,993,995 -PU53,161,162,69,111,123,500 -oA $VAR_FILENAME-extra $VAR_TARGET_CIDR

        -- In case the scan fails:
        - Change source port, e.g. -g53 or -g88
        - Add --randomize-hosts
        - Change -PA to -PS
        - Run with --unprivileged

        ~$ proxychains -q nmap -sn -n VAR_TARGET_CIDR
        ~$ nbtscan -r VAR_TARGET_CIDR
        ~$ netdiscover -i eth1 -P -N -r VAR_TARGET_CIDR
        ~$ for i in $(seq 1 254); do ip_address="192.168.1.$i"; ping -c 1 -W 1 $ip_address | grep "bytes from" >/dev/null && echo "$ip_address :)" || echo -n "."; done

        `` Nmap ping scan types (root only)

            ~# nmap -sn -n -PE VAR_TARGET_CIDR

            PS - TCP SYN (default at port 80)
            PA - TCP ACK (default at port 80)
            PU - UDP
            PY - SCTP INIT
            PE - ICMP Echo
            PP - ICMP timestamp
            PM - ICMP address mask
            PO - Other IP protocol
            PR - ARP scan