#!/usr/bin/env python

import argparse
import logging
import BaseHTTPServer as server
import os
import socket


logging.basicConfig(format='%(name)s %(levelname)s [%(asctime)s] %(message)s', level=logging.INFO)
logger = logging.getLogger('receiver')


class FileHandler(server.BaseHTTPRequestHandler):

    def do_GET(self):
        self.send_response(200)
        self.send_header('Content-type', 'text/html')
        self.end_headers()

    def do_POST(self):
        file_name = self.path.partition('/')[-1]
        if file_name:
            local_path = os.path.join(os.curdir, file_name)
            length = self.headers['content-length']
            data = self.rfile.read(int(length))
            with open(local_path, 'w') as fil:
                fil.write(data.decode())
            logger.info('Saved {}'.format(local_path))
            self.send_response(200)
        else:
            self.send_response(400)


class HTTPServerV6(server.HTTPServer):

    address_family = socket.AF_INET6


if __name__ == "__main__":

    parser = argparse.ArgumentParser(
        description='Saves files sent over HTTP POST to /path_is_filename.',
        formatter_class=argparse.ArgumentDefaultsHelpFormatter
    )
    parser.add_argument('-lh', '--addr', help='Listening address', default='')
    parser.add_argument('-lp', '--port', help='Listening port', type=int, default=8080)
    parser.add_argument('-6', '--ipv6', help='Enable IPv6', action='store_true')
    args = parser.parse_args()
    logger.info('Started HTTP server at {}'.format(':'.join([args.addr, str(args.port)])))
    server_cls = HTTPServerV6 if args.ipv6 else server.HTTPServer
    server = server_cls((args.addr, args.port), FileHandler)
    server.serve_forever()
